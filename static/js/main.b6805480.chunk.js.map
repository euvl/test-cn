{"version":3,"sources":["slate/editor/Suggestions.js","slate/editor/Heading.js","slate/editor/Paragraph.js","slate/editor/TermList.js","slate/editor/schema.js","slate/editor/Editor.js","slate/editor/index.js","slate/terms.js","slate/defaultValue.js","slate/App.js","index.js"],"names":["Suggestions","state","positionTop","positionLeft","focused","focusShift","componentDidMount","_this","updatePosition","componentDidUpdate","_this2","this","root","window","document","getElementById","_this$state","style","top","left","ReactDOM","createPortal","react_default","a","createElement","className","props","terms","map","term","key","code","classnames","onClick","onSelect","text","_this$props","anchor","anchorElement","querySelector","setState","anchorRect","getBoundingClientRect","length","bottom","PureComponent","Heading","_ref","children","Object","objectWithoutProperties","Paragraph","TermList","schema","nodes","type","normalize","editor","error","console","log","blocks","paragraph","match","object","heading","CAPTURE_REGEX","SEARCH_MARK_TYPE","getInput","value","startText","startOffset","selection","start","offset","textBefore","slice","result","exec","hasValidAncestors","getClosest","node","schemaDefaultValue","leaves","basicSchemaDefaultValue","ForcedLayout","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","editorRef","React","createRef","insertParagraph","arguments","undefined","insertBlock","insertText","focus","insertHeading","insertHeadingWithParagraph","insertMention","inputValue","current","block","first","deleteCharacterCount","deleteBackward","removeNodeByKey","onKeyDown","event","next","onEnter","onTab","preventDefault","end","isExpanded","startBlock","setBlocks","splitBlock","search","searchQuery","timeout","clearTimeout","setTimeout","regex","RegExp","concat","options","filter","onChange","change","lastInputValue","decorations","mark","push","setDecorations","renderNode","attributes","editor_Heading","editor_Paragraph","defaultValue","Value","fromJSON","label","slate_react_es","placeholder","basicSchema","ref","renderMark","editor_Suggestions","editor_TermList","assign","Component","defaultProps","Editor","slate_terms","slate_defaultValue","App","location","slate_editor","render","slate_App"],"mappings":"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","file":"static/js/main.b6805480.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\nimport classnames from \"classnames\";\nimport ReactDOM from \"react-dom\";\n\nclass Suggestions extends PureComponent {\n  state = {\n    positionTop: -10000,\n    positionLeft: -10000,\n    focused: null,\n    focusShift: 0\n  };\n\n  componentDidMount = () => {\n    this.updatePosition();\n  };\n\n  componentDidUpdate = () => {\n    this.updatePosition();\n  };\n\n  render() {\n    const root = window.document.getElementById(\"root\");\n    const { focused, positionTop, positionLeft } = this.state;\n\n    const style = {\n      top: positionTop,\n      left: positionLeft\n    };\n\n    return ReactDOM.createPortal(\n      <ul className=\"suggestion-ul\" style={style}>\n        {this.props.terms.map(term => (\n          <li\n            key={term.code}\n            className={classnames(\"suggestion-li\", {\n              focused: focused === term.code\n            })}\n            onClick={() => this.props.onSelect(term)}\n          >\n            <span>{term.text}</span>\n          </li>\n        ))}\n      </ul>,\n      root\n    );\n  }\n\n  updatePosition() {\n    const { anchor, terms } = this.props;\n    const anchorElement = window.document.querySelector(anchor);\n\n    if (!anchorElement) {\n      return this.setState({\n        positionLeft: -10000,\n        positionTop: -10000,\n        focused: null\n      });\n    }\n\n    const anchorRect = anchorElement.getBoundingClientRect();\n    const focused = terms.length > 0 ? terms[0].code : null;\n\n    this.setState({\n      positionTop: anchorRect.bottom,\n      positionLeft: anchorRect.left,\n      focused\n    });\n  }\n}\n\nexport default Suggestions;\n","import React from \"react\";\n\nconst Heading = ({ children, ...props }) => {\n  /**\n   * TODO: Add \"remove\" button\n   */\n  return <h2 {...props}>{children}</h2>;\n};\n\nexport default Heading;\n","import React from \"react\";\n\nconst Paragraph = ({ children, ...props }) => {\n  return <p {...props}>{children}</p>;\n};\n\nexport default Paragraph;\n","import React from \"react\";\n\nconst TermList = ({ terms }) => {\n  return (\n    <div className=\"term-list\">\n      <table>\n        <tbody>\n          {terms.map(term => (\n            <tr key={term.code}>\n              <td>\n                <b>@{term.code}</b>\n              </td>\n              <td>{term.text}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default TermList;\n","const schema = {\n  document: {\n    nodes: [{ type: \"heading\" }, { type: \"paragraph\" }],\n    normalize: (editor, error) => {\n      console.log(error);\n      ////    if (error.code == \"child_type_invalid\") {\n      //      editor.setNodeByKey(error.child.key, { type: \"paragraph\" });\n      //    }\n    }\n  },\n  blocks: {\n    paragraph: {\n      nodes: [\n        {\n          match: {\n            object: \"text\"\n          }\n        }\n      ]\n    },\n    heading: {\n      nodes: [\n        {\n          match: {\n            object: \"text\"\n          }\n        }\n      ]\n    }\n  }\n};\n\nexport default schema;\n","import { Editor as SlateEditor } from \"slate-react\";\nimport { Value } from \"slate\";\n\nimport React, { Component } from \"react\";\n\nimport Suggestions from \"./Suggestions\";\nimport Heading from \"./Heading\";\nimport Paragraph from \"./Paragraph\";\n\nimport TermList from \"./TermList\";\n\nimport schema from \"./schema\";\nimport basicSchema from \"./basicSchema\";\n\nconst CAPTURE_REGEX = /@(\\S*)$/;\nconst SEARCH_MARK_TYPE = \"mentionContext\";\n\nconst getInput = value => {\n  // In some cases, like if the node that was selected gets deleted,\n  // `startText` can be null.\n  if (!value.startText) {\n    return null;\n  }\n\n  const startOffset = value.selection.start.offset;\n  const textBefore = value.startText.text.slice(0, startOffset);\n  const result = CAPTURE_REGEX.exec(textBefore);\n\n  return result === null ? null : result[1];\n};\n\nfunction hasValidAncestors(value) {\n  const { document, selection } = value;\n\n  const invalidParent = document.getClosest(\n    selection.start.key,\n    // In this simple case, we only want mentions to live inside a paragraph.\n    // This check can be adjusted for more complex rich text implementations.\n    node => node.type !== \"paragraph\" && node.type !== \"heading\"\n  );\n\n  return !invalidParent;\n}\n\nconst schemaDefaultValue = {\n  document: {\n    nodes: [\n      {\n        object: \"block\",\n        type: \"heading\",\n        nodes: [\n          {\n            object: \"text\",\n            leaves: [\n              {\n                text: \"\"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n};\n\nconst basicSchemaDefaultValue = {\n  document: {\n    nodes: [\n      {\n        object: \"block\",\n        type: \"paragraph\",\n        nodes: [\n          {\n            object: \"text\",\n            leaves: [\n              {\n                text: \"\"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n};\n\nclass ForcedLayout extends Component {\n  editorRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    const defaultValue =\n      this.props.defaultValue ||\n      (this.props.type === \"simple\"\n        ? basicSchemaDefaultValue\n        : schemaDefaultValue);\n\n    this.state = {\n      defaultValue: Value.fromJSON(defaultValue),\n      terms: []\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <label>{this.props.label}</label>\n\n        <div className=\"layout\">\n          <div className=\"layout-left\">\n            <SlateEditor\n              className=\"editor\"\n              placeholder=\"Enter a title...\"\n              defaultValue={this.state.defaultValue}\n              schema={this.props.type === \"simple\" ? basicSchema : schema}\n              ref={this.editorRef}\n              renderNode={this.renderNode}\n              renderMark={this.renderMark}\n              onKeyDown={this.onKeyDown}\n              onChange={this.onChange}\n            />\n            <Suggestions\n              anchor=\".search-word-context\"\n              terms={this.state.terms}\n              onSelect={this.insertMention}\n            />\n          </div>\n          <div className=\"layout-right\">\n            <TermList terms={this.props.options} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderMark(props, editor, next) {\n    if (props.mark.type === SEARCH_MARK_TYPE) {\n      return (\n        <span {...props.attributes} className=\"search-word-context\">\n          {props.children}\n        </span>\n      );\n    }\n\n    return next();\n  }\n\n  insertParagraph = (editor, paragraph = \"\") => {\n    return editor\n      .insertBlock(\"paragraph\")\n      .insertText(paragraph)\n      .focus();\n  };\n\n  insertHeading = (editor, heading = \"\") => {\n    return editor\n      .insertBlock(\"heading\")\n      .insertText(heading)\n      .focus();\n  };\n\n  insertHeadingWithParagraph = (editor, heading = \"\", paragraph = \"\") => {\n    return editor\n      .insertBlock(\"heading\")\n      .insertText(heading)\n      .insertBlock(\"paragraph\")\n      .insertText(paragraph)\n      .focus();\n  };\n\n  insertMention = term => {\n    const value = this.state.value;\n    const inputValue = getInput(value);\n    const editor = this.editorRef.current;\n    const block = editor.value.blocks.first();\n    const deleteCharacterCount = inputValue.length + 1;\n\n    if (block) {\n      if (block.type === \"heading\") {\n        editor\n          .deleteBackward(value.startText.text.length)\n          .insertText(term.text)\n          .focus();\n      }\n\n      if (block.type === \"paragraph\") {\n        editor.removeNodeByKey(block.key);\n\n        this.insertHeadingWithParagraph(\n          editor,\n          term.text,\n          value.startText.text\n        );\n\n        editor.deleteBackward(deleteCharacterCount).focus();\n      }\n    }\n  };\n\n  onKeyDown = (event, editor, next) => {\n    switch (event.key) {\n      case \"Enter\":\n        if (this.props.type === \"simple\") {\n          return next();\n        } else {\n          return this.onEnter(event, editor, next);\n        }\n      case \"Tab\":\n        return this.onTab(event, editor, next);\n      default:\n        return next();\n    }\n  };\n\n  onTab = (event, editor, next) => {\n    const { terms } = this.state;\n\n    if (terms && terms.length > 0) {\n      this.insertMention(terms[0]);\n    }\n    /**\n     * GOTO: default\n     */\n    event.preventDefault();\n  };\n\n  onEnter = (event, editor, next) => {\n    const { value } = editor;\n    const { selection } = value;\n    const { start, end, isExpanded } = selection;\n\n    if (isExpanded) {\n      return next();\n    }\n\n    const { startBlock } = value;\n\n    const isPreviousParagraphEmpty =\n      start.offset === 0 && end.offset === 0 && startBlock.text.length === 0;\n    /**\n     * Create heading if previous paragraph is empty\n     */\n    if (isPreviousParagraphEmpty) {\n      event.preventDefault();\n      editor.setBlocks(\"heading\");\n      return;\n    }\n\n    if (startBlock.type !== \"heading\") {\n      return next();\n    }\n    /**\n     * Create paragraph\n     */\n    event.preventDefault();\n    editor.splitBlock().setBlocks(\"paragraph\");\n  };\n\n  search = searchQuery => {\n    this.setState({\n      terms: []\n    });\n\n    if (!searchQuery) {\n      return;\n    }\n\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n\n    this.timeout = setTimeout(() => {\n      const regex = RegExp(`^${searchQuery}`, \"gi\");\n\n      this.setState({\n        terms: this.props.options.filter(\n          term => term.text.match(regex) || term.code.match(regex)\n        )\n      });\n    }, 50);\n  };\n\n  onChange = change => {\n    const inputValue = getInput(change.value);\n\n    if (inputValue !== this.lastInputValue) {\n      this.lastInputValue = inputValue;\n\n      if (hasValidAncestors(change.value)) {\n        this.search(inputValue);\n      }\n\n      const { selection } = change.value;\n\n      let decorations = change.value.decorations.filter(\n        value => value.mark.type !== SEARCH_MARK_TYPE\n      );\n\n      if (inputValue && hasValidAncestors(change.value)) {\n        decorations = decorations.push({\n          anchor: {\n            key: selection.start.key,\n            offset: selection.start.offset - inputValue.length\n          },\n          focus: {\n            key: selection.start.key,\n            offset: selection.start.offset\n          },\n          mark: {\n            type: SEARCH_MARK_TYPE\n          }\n        });\n      }\n\n      this.setState({ value: change.value }, () => {\n        // We need to set decorations after the value flushes into the editor.\n        this.editorRef.current.setDecorations(decorations);\n      });\n      return;\n    }\n\n    this.setState({ value: change.value });\n  };\n\n  renderNode = (props, editor, next) => {\n    const { attributes, children, node } = props;\n\n    window.editor = editor;\n\n    switch (node.type) {\n      case \"heading\":\n        return <Heading {...attributes}>{children}</Heading>;\n      case \"paragraph\":\n        return <Paragraph {...attributes}>{children}</Paragraph>;\n      default:\n        return next();\n    }\n  };\n}\n\nForcedLayout.defaultProps = {\n  options: []\n};\n\nexport default ForcedLayout;\n","import Editor from \"./Editor\";\n\nexport default Editor;\n","export default [\n  {\n    code: \"hpc\",\n    text: \"History of Presenting Complaint\"\n  },\n  {\n    code: \"pmh\",\n    text: \"Past Medical History\"\n  },\n  {\n    code: \"med\",\n    text: \"Medication History\"\n  },\n  {\n    code: \"all\",\n    text: \"Allergies\"\n  },\n  {\n    code: \"fam\",\n    text: \"Family History\"\n  },\n  {\n    code: \"soc\",\n    text: \"Social History\"\n  },\n  {\n    code: \"oex\",\n    text: \"On Examination\"\n  },\n  {\n    code: \"imp\",\n    text: \"Impression\"\n  },\n  {\n    code: \"adv\",\n    text: \"Advice\"\n  },\n  {\n    code: \"saf\",\n    text: \"Safety Netting\"\n  }\n];\n","export default {\n  document: {\n    nodes: [\n      {\n        object: \"block\",\n        type: \"heading\",\n        nodes: [\n          {\n            object: \"text\",\n            leaves: [\n              {\n                text: \"Heading\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        object: \"block\",\n        type: \"paragraph\",\n        nodes: [\n          {\n            object: \"text\",\n            leaves: [\n              {\n                text: \"This is prototype.\"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n};\n","import React from \"react\";\n\nimport Editor from \"./editor\";\nimport terms from \"./terms\";\nimport defaultValue from \"./defaultValue\";\n\nconst App = () =>\n  window.location.search === \"?v2\" ? (\n    <div>\n      <Editor\n        label=\"History\"\n        options={[\n          {\n            code: \"pmh\",\n            text: \"Past Medical History\"\n          },\n          {\n            code: \"med\",\n            text: \"Medication History\"\n          },\n          {\n            code: \"all\",\n            text: \"Allergies\"\n          },\n          {\n            code: \"fam\",\n            text: \"Family History\"\n          },\n          {\n            code: \"soc\",\n            text: \"Social History\"\n          }\n        ]}\n        defaultValue={defaultValue}\n      />\n      <br />\n      <Editor label=\"Examination\" type=\"simple\" />\n      <br />\n      <Editor label=\"Diagnosis\" type=\"simple\" />\n      <br />\n      <Editor\n        label=\"Plan\"\n        options={[\n          {\n            code: \"adv\",\n            text: \"Advice\"\n          },\n          {\n            code: \"saf\",\n            text: \"Safety Netting\"\n          }\n        ]}\n        defaultValue={defaultValue}\n      />\n    </div>\n  ) : (\n    <Editor\n      label=\"Consultation Notes\"\n      options={terms}\n      defaultValue={defaultValue}\n    />\n  );\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\n\nimport App from \"./slate/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}